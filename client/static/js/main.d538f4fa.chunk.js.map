{"version":3,"sources":["logo.svg","Petition.js","Netas.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Petition","e","preventDefault","axios","post","Name","target","value","Email","ActionArea","Sections","CaseConsent","Phone","Address","Action","elements","PinCode","then","res","console","log","data","catch","err","mailToLink","encodeURI","window","location","href","data-toggle","data-target","class","Form","id","className","onSubmit","this","filePetition","Group","Control","name","type","placeholder","required","Text","Button","variant","React","Component","netas","allNetas","Netas","get","response","status","setState","error","getNetas","toUpperCase","filteredNetas","filter","neta","ACName","includes","Party","Mobile","toString","Twitter","onInput","filterNetas","map","i","key","_id","No","App","style","src","margin","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"6JAAAA,EAAOC,QAAU,IAA0B,kC,+NCItBC,E,qLACJC,GAAI,IAAD,sBACZA,EAAEC,iBAEFC,IAAMC,KAAK,kDAAmD,CAC1DC,KAAI,UAAEJ,EAAEK,OAAOD,YAAX,aAAE,EAAeE,MACrBC,MAAK,UAAEP,EAAEK,OAAOE,aAAX,aAAE,EAAgBD,MACvBE,WAAU,UAAER,EAAEK,OAAOG,kBAAX,aAAE,EAAqBF,MACjCG,SAAQ,UAAET,EAAEK,OAAOI,gBAAX,aAAE,EAAmBH,MAC7BI,YAAW,UAAEV,EAAEK,OAAOK,mBAAX,aAAE,EAAsBJ,MACnCK,MAAK,UAAEX,EAAEK,OAAOM,aAAX,aAAE,EAAgBL,MACvBM,QAAO,UAAEZ,EAAEK,OAAOO,eAAX,aAAE,EAAkBN,MAC3BO,OAAM,UAAEb,EAAEK,OAAOS,SAAS,UAApB,aAAE,EAAsBR,MAC9BS,QAAO,UAAEf,EAAEK,OAAOU,eAAX,aAAE,EAAkBT,QAE1BU,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,SAEnBC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAGpB,IAAII,EAAaC,UAAU,oEAAD,iBAC8CxB,EAAEK,OAAOE,aADvD,aAC8C,EAAgBD,MAD9D,ujIAmChCN,EAAEK,OAAOD,YAnCuB,aAmChC,EAAeE,MAnCiB,yDAuC1BmB,OAAOC,SAASC,KAAOJ,I,+BAIvB,OACI,6BACI,uBAAGK,cAAY,WAAWC,cAAY,SAAQ,4BAAQC,MAAM,mBAAd,uEAA9C,KAEA,kBAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,UAAU,WAAWC,SAAUC,KAAKC,cAChD,wEACA,yBAAKH,UAAU,OACX,yBAAKA,UAAU,YAAW,kBAACF,EAAA,EAAKM,MAAN,KACtB,kBAACN,EAAA,EAAKO,QAAN,CAAcC,KAAK,OAAOC,KAAK,OAAOC,YAAY,QAAQC,UAAQ,MAGtE,yBAAKT,UAAU,YAAf,IAA2B,kBAACF,EAAA,EAAKM,MAAN,KACvB,kBAACN,EAAA,EAAKO,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAY,SAASC,UAAQ,IACrE,kBAACX,EAAA,EAAKY,KAAN,CAAWV,UAAU,cAArB,qDA8DR,kBAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,UAA/B,sB,GA7IkBM,IAAMC,WCAxCC,EAAQ,GAAIC,EAAW,GAENC,E,4TAKchD,IAAMiD,IAAN,gD,OAEC,OAFlBC,E,QAEOC,SAETJ,EAAWD,EAAQI,EAAShC,KAC5Be,KAAKmB,SAAS,CAAEN,W,gDAIpB9B,QAAQC,IAAR,MACAgB,KAAKmB,SAAS,CAAEC,MAAO,qB,yJAK3BpB,KAAKqB,a,kCAGGlD,GACRA,EAAQA,EAAMmD,cACd,IAAIC,EAAgBT,EAASU,QAAO,SAACC,GACjC,OAAOA,EAAKC,OAAOJ,cAAcK,SAASxD,IACtCsD,EAAKG,MAAMN,cAAcK,SAASxD,IAClCsD,EAAKI,OAAOC,WAAWR,cAAcK,SAASxD,IAC9CsD,EAAKrD,MAAMkD,cAAcK,SAASxD,IAClCsD,EAAKM,QAAQT,cAAcK,SAASxD,IACpCsD,EAAKhD,QAAQ6C,cAAcK,SAASxD,MAE5C0C,EAAQU,EACRvB,KAAKmB,SAAS,CAAEN,MAAOU,M,+BAGjB,IAAD,OACL,OACI,yBAAKzB,UAAU,YACX,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,aACX,6BAEI,yBAAKA,UAAU,eACX,2BAAOO,KAAK,OAAO2B,QAAS,SAACnE,GACzB,EAAKoE,YAAYpE,EAAEK,OAAOC,QAE5B2B,UAAU,eAAeQ,YAAY,4GAA4GF,KAAK,WACxJ,yBAAKN,UAAU,mBACX,4BAAQA,UAAU,kBAAkBO,KAAK,UAAS,uBAAGP,UAAU,qBAItEe,GAASA,EAAMqB,KAAI,SAACT,EAAMU,GAAP,OAEhB,yBAAKC,IAAG,UAAKX,EAAKY,IAAV,YAAiBZ,EAAKC,QAAU5B,UAAU,QAC9C,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,6BACI,mCAAQ,yBAAKA,UAAU,cAClB2B,EAAKa,KAIV,2BAAOxC,UAAU,QAAjB,IAA0B2B,EAAK,gBAA/B,IAAgD,mCAASA,EAAKG,MAAd,UAA4BH,EAAKC,QAAjF,OAGR,yBAAK5B,UAAU,YACX,4BACK2B,EAAKI,QAAU,4BACZ,yCADY,IACU,uBAAGrC,KAAI,cAASiC,EAAKI,SAAWJ,EAAKI,SAG9DJ,EAAKrD,OAAS,4BACX,yCACA,uBAAGoB,KAAI,iBAAYiC,EAAKrD,QAAUqD,EAAKrD,QAG1CqD,EAAKM,SAAW,4BACb,0CADa,IACWN,EAAKM,SAGhCN,EAAKhD,SAAW,4BACb,2CADa,IACYgD,EAAKhD,kBAY9D,yBAAKqB,UAAU,kB,GAjGIa,IAAMC,WCkC1B2B,MAlCf,WACE,OACE,yBAAKzC,UAAU,OACb,6BACE,uBAAGN,KAAK,0CAAyC,uBAAGM,UAAU,qBAA9D,iBACA,uBAAGN,KAAK,qDAAoD,uBAAGM,UAAU,oBAAzE,iBACA,uBAAGN,KAAK,mCAAkC,uBAAGM,UAAU,mBAAvD,iBACA,2BAAOA,UAAU,eAAjB,WAEF,yBAAKA,UAAU,yBACb,yBAAK0C,MAAO,CAAE,MAAS,OAASC,IAAI,oBACpC,2BAAG,uBAAGjD,KAAK,+DAAR,QAAH,uBAAqG,uBAAGA,KAAK,sUAAR,WAErG,kBAAC,EAAD,OAGF,yBAAKM,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,aAEb,kBAAC,EAAD,MAEA,wBAAI0C,MAAO,CAAEE,OAAQ,UAGvB,yBAAK5C,UAAU,iBCrBL6C,QACW,cAA7BrD,OAAOC,SAASqD,UAEe,UAA7BtD,OAAOC,SAASqD,UAEhBtD,OAAOC,SAASqD,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvE,MAAK,SAAAwE,GACJA,EAAaC,gBAEdpE,OAAM,SAAAkC,GACLrC,QAAQqC,MAAMA,EAAMmC,c","file":"static/js/main.d538f4fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nexport default class Petition extends React.Component {\n    filePetition(e) {\n        e.preventDefault();\n\n        axios.post('http://hellonetaji.therespect.org/api/petitions', {\n            Name: e.target.Name?.value,\n            Email: e.target.Email?.value,\n            ActionArea: e.target.ActionArea?.value,\n            Sections: e.target.Sections?.value,\n            CaseConsent: e.target.CaseConsent?.value,\n            Phone: e.target.Phone?.value,\n            Address: e.target.Address?.value,\n            Action: e.target.elements[3]?.value,\n            PinCode: e.target.PinCode?.value\n        })\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n            .catch(err => {\n                console.log('An error occured')\n            })\n\n        let mailToLink = encodeURI(\n            `mailto:chiefminister@maharashtra.gov.in,cm@maharashtra.gov.in?cc=${e.target.Email?.value},adityathackeray@me.com,bbtsangamner@gmail.com,pawars@sansad.nic.in,sec_socjustice@maharashtra.gov.in\n&subject=Petition to pass a resolution against CAA, NRC and NPR\n&body=Dear Ma’am/ Sir,\n\nWe, voters of your constituency, want to bring to your attention that we are against CAA-NRC-NPR. As Maharashtra Vidhan Sabha assembly sessions begin on 24th February 2020, we appeal to you to demand for a resolution to be passed against the implementation of NPR enumeration process in Maharashtra and to reject CAA and all India NRC.\n\nWhy are we against NPR?\n\nLink to NRC: ​NPR 2020 includes citizenship related questions i.e it asks for parents birth details and links 5 personal documents which were not there previously. This has clear links to NRC and the rules explicitly state that NPR will be the mother database for NRC. The only purpose of conducting NPR is for NRC as provided in the 2003 Rules and without any plan to conduct all India NRC, NPR would be a futile and wasted exercise, with the dangerous potential to render people stateless. Once the NPR is conducted, the database can be misused to conduct all India NRC by the Central Government at any stage and if the state government has already decided it is against all India NRC, it is dutybound to ensure that such a situation is not allowed to arise and rights of the people are protected.\n\nIssues: ​There are multiple concerns with NRC-NPR. It gives arbitrary powers to local registrar, lowest rung officer in the bureaucracy to declare anyone a doubtful citizen. The possibility of corruption, bias and personal enmity can also not be ruled out. There is no clarity on what documents will prove citizenship and many sections of India don’t have even basic documents - adivasis, bahujan, the poor, women, orphans, sex workers, transgenders and people from other marginalised groups will be at high risk of being left out from such a list. Even with its peculiar history, the Assam NRC experience is a testimony to the pandemonium and human costs that this process can create. Children have been separated from their families, Women have been the biggest victims since many do not have necessary documents. We do not want such an inhuman and oppressive exercise in our state of Maharashtra.\n\nCost: ​Moreover, we oppose the allocation of large funds to such a discriminatory and useless exercise when the country is suffering from multiple economic and agrarian crisis. If there is no plan to implement nationwide NRC (as the centre sometimes states) then why conduct such an expensive process at all.\n\nLoss of trust: ​There is growing fear and panic among common masses. People have also begun exploiting this fear by selling fake documents. The most harmful impact is the loss of trust between people and the government. ​Census data will be contaminated in this atmosphere of distrust and hence NPR must be stopped and should not be done with the houselisting phase of census.\n\nOur demands to the state government:\n\n1. Stop NPR, Reject NRC and CAA: Immediately pass a resolution clearly providing that NPR will not be conducted in Maharashtra and rejecting CAA and all India NRC.\n\n2. Do not start enumeration for the Census 2021 until NPR-NRC are withdrawn\n\n3. Demand Withdrawal of Central Government Notification for NPR.\n\n4. Demand that the Central Government Repeal CAA and permanently Withdraw all India NRC by introducing appropriate legislative changes.\n\n5. Demand Withdrawal /Repeal of Amendments to the Foreigners Order 1948 and Passport (Entry of India) Rules 1950 made in 2015, 2016 and thereafter, which are discriminatory and violative of Articles 14 and 21 of the Indian Constitution\n\n6. Demand Withdrawal of all RBI Circulars and Notifications made in tune with the amendments to the Passport Rules to benefit exclusively one set of migrants (Notification No. FEMA 21(R)/2018-RB dated March 26, 2018, Foreign Exchange Management (Acquisition and Transfer of Immovable Property in India) Regulations, 2018)\n\nReject NPR/NRC/CAA!\nStand with the People in Maharashtra!\n\nYours sincerely,\n${e.target.Name?.value},\nYour voters from Maharashtra,\nCitizens of India.`);\n\n        window.location.href = mailToLink;\n    }\n\n    render() {\n        return (\n            <div>\n                <p data-toggle=\"collapse\" data-target=\"#demo\"><button class=\"btn btn-primary\"> Click here to submit your memorandum to the Maharashtra government</button> </p>\n\n                <Form id=\"demo\" className=\"collapse\" onSubmit={this.filePetition}>\n                    <sub>*This will generate an automated email.</sub>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\"><Form.Group>\n                            <Form.Control name=\"Name\" type=\"text\" placeholder=\"Name*\" required />\n                        </Form.Group>\n                        </div>\n                        <div className=\"col-md-6\"> <Form.Group>\n                            <Form.Control name=\"Email\" type=\"email\" placeholder=\"Email*\" required />\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else.\n                                </Form.Text>\n                        </Form.Group>\n                        </div>\n                        {/* <div className=\"col-md-4\">\n                            <Form.Group>\n                                <Form.Control name=\"Phone\" type=\"text\" placeholder=\"Phone*\" required />\n                            </Form.Group>\n                        </div> */}\n                    </div>\n\n                    {/* <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <Form.Group>\n                                <Form.Text className=\"text-muted\">\n                                    Has Police taken any of the following action on you?\n                                </Form.Text>\n                                <Form.Check name=\"Action\" className=\"d-inline\" type='checkbox' id={`Detained`} label={`Detained`} value=\"Detained\" />\n                                <Form.Check name=\"Action\" className=\"d-inline\" type='checkbox' id={`NoticeIssued`} label={`Notice Issued`} value=\"NoticeIssued\" />\n                                <Form.Check name=\"Action\" className=\"d-inline\" type='checkbox' id={`FIR`} label={`FIR`} value=\"FIR\" />\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <Form.Group>\n                                <Form.Text className=\"text-muted\">\n                                    Will you consent to a collective suit filed on behalf of you & others in a Court of law?\n                                </Form.Text>\n                                <Form.Check name=\"CaseConsent\" className=\"d-inline\" type='radio' id={`Yes`} label={`Yes`} value=\"Yes\" />\n                                <Form.Check name=\"CaseConsent\" className=\"d-inline\" type='radio' id={`No`} label={`No`} value=\"No\" />\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <Form.Group>\n                                <Form.Control name=\"ActionArea\" type=\"text\" placeholder=\"Police Station / Area where this action was taken on you (optional)\" required />\n                            </Form.Group>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n\n                        <div className=\"col-md-4\">\n                            <Form.Group>\n                                <Form.Control name=\"Sections\" type=\"text\" placeholder=\"Specify sections slapped on you (optional)\" required />\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <Form.Group>\n                                <Form.Control name=\"PinCode\" type=\"text\" placeholder=\"Pin code (optional)\" />\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <Form.Group>\n                                <Form.Control name=\"Address\" type=\"text\" placeholder=\"Address (optional)\" />\n                            </Form.Group>\n                        </div>\n                    </div> */}\n\n                    <Button variant=\"primary\" type=\"submit\"> Send email </Button>\n\n                </Form>\n            </div>);\n    }\n}","import React from 'react';\nimport axios from 'axios';\nimport Petition from './Petition';\n\nlet netas = [], allNetas = [];\n\nexport default class Netas extends React.Component {\n\n    async getNetas() {\n        try {\n\n            const response = await axios.get(`//hellonetaji.therespect.org/api/politicians`);\n\n            if (response.status === 200) {\n                /* Map the response to IShariahStocks */\n                allNetas = netas = response.data;\n                this.setState({ netas });\n            }\n\n        } catch (ex) {\n            console.log(ex);\n            this.setState({ error: 'An error occured' });\n        }\n    }\n\n    componentDidMount() {\n        this.getNetas();\n    }\n\n    filterNetas(value) {\n        value = value.toUpperCase();\n        let filteredNetas = allNetas.filter((neta) => {\n            return neta.ACName.toUpperCase().includes(value) ||\n                neta.Party.toUpperCase().includes(value) ||\n                neta.Mobile.toString().toUpperCase().includes(value) ||\n                neta.Email.toUpperCase().includes(value) ||\n                neta.Twitter.toUpperCase().includes(value) ||\n                neta.Address.toUpperCase().includes(value);\n        });\n        netas = filteredNetas;\n        this.setState({ netas: filteredNetas });\n    }\n\n    render() {\n        return (\n            <div className=\"row mt-4\">\n                <div className=\"col-sm-1\"></div>\n\n                <div className=\"col-sm-12\">\n                    <div>\n\n                        <div className=\"input-group\">\n                            <input type=\"text\" onInput={(e) => {\n                                this.filterNetas(e.target.value);\n                            }\n                            } className=\"form-control\" placeholder=\"search for your MLA from Maharashtra here (contact us on social media for data addition for other states)\" name=\"search\" />\n                            <div className=\"input-group-btn\">\n                                <button className=\"btn btn-default\" type=\"submit\"><i className=\"fas fa-search\"></i></button>\n                            </div>\n                        </div>\n\n                        {netas && netas.map((neta, i) =>\n\n                            <div key={`${neta._id}-${neta.ACName}`} className='mt-3'>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div>\n                                            <small> <sup className='text-muted'>\n                                                {neta.No}\n                                            </sup>\n                                            </small>\n\n                                            <label className='ml-3'> {neta['Sitting MLAs']} <small>({neta.Party}) from {neta.ACName}</small> </label>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <ul>\n                                            {neta.Mobile && <li>\n                                                <small>phone:</small> <a href={`tel:${neta.Mobile}`}>{neta.Mobile}</a>\n                                            </li>}\n\n                                            {neta.Email && <li>\n                                                <small>email:</small>\n                                                <a href={`mailto:${neta.Email}`}>{neta.Email}</a>\n                                            </li>}\n\n                                            {neta.Twitter && <li>\n                                                <small>social:</small> {neta.Twitter}\n                                            </li>}\n\n                                            {neta.Address && <li>\n                                                <small>address:</small> {neta.Address}\n                                            </li>}\n                                        </ul>\n\n                                    </div>\n                                </div>\n                            </div>\n\n                        )}\n                    </div>\n\n                </div>\n                <div className=\"col-sm-1\"></div>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Netas from './Netas';\nimport Petition from './Petition';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <a href=\"https://www.instagram.com/hellonetaji/\"><i className=\"fab fa-instagram\"></i> HelloNetaji </a>\n        <a href=\"https://facebook.com/HelloNetaji-102682481335358/\"><i className=\"fab fa-facebook\"></i> HelloNetaji </a>\n        <a href=\"https://twitter.com/netajihello\"><i className=\"fab fa-twitter\"></i> NetajiHello </a>\n        <label className=\"float-right\" >v1.0.2</label>\n      </div>\n      <div className=\"jumbotron text-center\">\n        <img style={{ \"width\": \"10%\" }} src=\"logos/logo.jpeg\" />\n        <p><a href=\"https://en.wikipedia.org/wiki/National_Register_of_Citizens\"> NPR</a> 2020 se NRC banega <a href=\"https://twitter.com/intent/tweet?url=http%3A%2F%2Fhellonetaji.therespect.org%2F&text=Dear%20Netaji!%20Please%20stop%20NPR%20in%20Maharashtra%20Assembly.%20NPR%20is%20the%20first%20step%20of%20NRC%20which%20will%20mark%20people%20as%20doubtful%20citizens!%20%23HelloNetaji%20%23noNPR%20%23noNRC%20Find%20your%20Neta%20at%20\">#NoNPR</a></p>\n\n        <Petition />\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-1\"></div>\n\n          <div className=\"col-sm-10\">\n\n            <Netas />\n\n            <hr style={{ margin: '3em' }} />\n\n          </div>\n          <div className=\"col-sm-1\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'; //Bootstrap\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}